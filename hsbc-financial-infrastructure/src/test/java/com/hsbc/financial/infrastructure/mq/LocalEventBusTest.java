package com.hsbc.financial.infrastructure.mq;

import com.hsbc.financial.domain.common.exception.InfrastructureException;
import com.hsbc.financial.domain.common.utils.JacksonUtil;
import com.hsbc.financial.domain.transaction.command.TransactionCommand;
import com.hsbc.financial.domain.transaction.entity.*;
import com.hsbc.financial.domain.transaction.entity.TransactionEvent;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.context.ApplicationEventPublisher;
import org.mockito.*;


import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.doNothing;

/**
 * This class is used for unit testing the LocalEventBus class.(Generated by JoyCoder)
 * @author: zhaoyongping8
 * @date: 2025-01-12
 */
@ExtendWith(MockitoExtension.class)
public class LocalEventBusTest {

	@InjectMocks
	private LocalEventBus localEventBus;

	@Mock
	private ApplicationEventPublisher applicationEventPublisher;

    @Test
    public void testPublishTransactionCommandNotNull() {
        TransactionEvent event = new TransactionEvent();
        String eventData = """
                {
                  "transactionId": "txn123456",
                  "sourceAccountId": "acc987654",
                  "destAccountId": "acc123456",
                  "amount": 100.50,
                  "timestamp": "2025-01-12T12:34:56.789Z"
                }""";
        event.setEventData(eventData);
        TransactionCommand transactionCommand = JacksonUtil.fromJson(eventData, TransactionCommand.class);
        doNothing().when(applicationEventPublisher).publishEvent(transactionCommand);
        localEventBus.publish(event);

    }

    @Test
    public void testPublishTransactionCommandNull() {
        TransactionEvent event = new TransactionEvent();
        event.setEventData(null);
        assertThrows(InfrastructureException.class, () -> {
            localEventBus.publish(event);
        });
        assertThrows(InfrastructureException.class, () -> {
            localEventBus.publish(null);
        });
    }

}